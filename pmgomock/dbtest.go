// Code generated by MockGen. DO NOT EDIT.
// Source: /home/tim/git/pmgo/dbtest.go

// Package pmgomock is a generated GoMock package.
package pmgomock

import (
	x "."
	gomock "github.com/golang/mock/gomock"
	. "github.com/percona/pmgo"
	reflect "reflect"
)

// MockDBTestServer is a mock of DBTestServer interface
type MockDBTestServer struct {
	ctrl     *gomock.Controller
	recorder *MockDBTestServerMockRecorder
}

// MockDBTestServerMockRecorder is the mock recorder for MockDBTestServer
type MockDBTestServerMockRecorder struct {
	mock *MockDBTestServer
}

// NewMockDBTestServer creates a new mock instance
func NewMockDBTestServer(ctrl *gomock.Controller) *MockDBTestServer {
	mock := &MockDBTestServer{ctrl: ctrl}
	mock.recorder = &MockDBTestServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDBTestServer) EXPECT() *MockDBTestServerMockRecorder {
	return m.recorder
}

// Session mocks base method
func (m *MockDBTestServer) Session() x.SessionManager {
	ret := m.ctrl.Call(m, "Session")
	ret0, _ := ret[0].(x.SessionManager)
	return ret0
}

// Session indicates an expected call of Session
func (mr *MockDBTestServerMockRecorder) Session() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Session", reflect.TypeOf((*MockDBTestServer)(nil).Session))
}

// SetPath mocks base method
func (m *MockDBTestServer) SetPath(dbpath string) {
	m.ctrl.Call(m, "SetPath", dbpath)
}

// SetPath indicates an expected call of SetPath
func (mr *MockDBTestServerMockRecorder) SetPath(dbpath interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPath", reflect.TypeOf((*MockDBTestServer)(nil).SetPath), dbpath)
}

// Stop mocks base method
func (m *MockDBTestServer) Stop() {
	m.ctrl.Call(m, "Stop")
}

// Stop indicates an expected call of Stop
func (mr *MockDBTestServerMockRecorder) Stop() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stop", reflect.TypeOf((*MockDBTestServer)(nil).Stop))
}

// Wipe mocks base method
func (m *MockDBTestServer) Wipe() {
	m.ctrl.Call(m, "Wipe")
}

// Wipe indicates an expected call of Wipe
func (mr *MockDBTestServerMockRecorder) Wipe() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Wipe", reflect.TypeOf((*MockDBTestServer)(nil).Wipe))
}
